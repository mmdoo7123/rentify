// Generated by view binder compiler. Do not edit!
package com.example.renters.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.renters.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddEditCategoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonSaveCategory;

  @NonNull
  public final TextInputEditText editTextCategoryDescription;

  @NonNull
  public final TextInputEditText editTextCategoryName;

  @NonNull
  public final TextInputLayout inputLayoutCategoryDescription;

  @NonNull
  public final TextInputLayout inputLayoutCategoryName;

  private ActivityAddEditCategoryBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonSaveCategory,
      @NonNull TextInputEditText editTextCategoryDescription,
      @NonNull TextInputEditText editTextCategoryName,
      @NonNull TextInputLayout inputLayoutCategoryDescription,
      @NonNull TextInputLayout inputLayoutCategoryName) {
    this.rootView = rootView;
    this.buttonSaveCategory = buttonSaveCategory;
    this.editTextCategoryDescription = editTextCategoryDescription;
    this.editTextCategoryName = editTextCategoryName;
    this.inputLayoutCategoryDescription = inputLayoutCategoryDescription;
    this.inputLayoutCategoryName = inputLayoutCategoryName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddEditCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddEditCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_edit_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddEditCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSaveCategory;
      MaterialButton buttonSaveCategory = ViewBindings.findChildViewById(rootView, id);
      if (buttonSaveCategory == null) {
        break missingId;
      }

      id = R.id.editTextCategoryDescription;
      TextInputEditText editTextCategoryDescription = ViewBindings.findChildViewById(rootView, id);
      if (editTextCategoryDescription == null) {
        break missingId;
      }

      id = R.id.editTextCategoryName;
      TextInputEditText editTextCategoryName = ViewBindings.findChildViewById(rootView, id);
      if (editTextCategoryName == null) {
        break missingId;
      }

      id = R.id.inputLayoutCategoryDescription;
      TextInputLayout inputLayoutCategoryDescription = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutCategoryDescription == null) {
        break missingId;
      }

      id = R.id.inputLayoutCategoryName;
      TextInputLayout inputLayoutCategoryName = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutCategoryName == null) {
        break missingId;
      }

      return new ActivityAddEditCategoryBinding((ConstraintLayout) rootView, buttonSaveCategory,
          editTextCategoryDescription, editTextCategoryName, inputLayoutCategoryDescription,
          inputLayoutCategoryName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
