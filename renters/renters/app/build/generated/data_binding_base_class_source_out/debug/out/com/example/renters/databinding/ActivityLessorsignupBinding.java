// Generated by view binder compiler. Do not edit!
package com.example.renters.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.renters.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLessorsignupBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView alreadyHaveAccount;

  @NonNull
  public final EditText editTextName;

  @NonNull
  public final EditText editTextPassword;

  @NonNull
  public final EditText editTextTextEmailAddress2;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final MaterialButton signUpButton;

  private ActivityLessorsignupBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView alreadyHaveAccount, @NonNull EditText editTextName,
      @NonNull EditText editTextPassword, @NonNull EditText editTextTextEmailAddress2,
      @NonNull ImageView imageView, @NonNull RelativeLayout main,
      @NonNull MaterialButton signUpButton) {
    this.rootView = rootView;
    this.alreadyHaveAccount = alreadyHaveAccount;
    this.editTextName = editTextName;
    this.editTextPassword = editTextPassword;
    this.editTextTextEmailAddress2 = editTextTextEmailAddress2;
    this.imageView = imageView;
    this.main = main;
    this.signUpButton = signUpButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLessorsignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLessorsignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_lessorsignup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLessorsignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.already_have_account;
      TextView alreadyHaveAccount = ViewBindings.findChildViewById(rootView, id);
      if (alreadyHaveAccount == null) {
        break missingId;
      }

      id = R.id.editTextName;
      EditText editTextName = ViewBindings.findChildViewById(rootView, id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.editTextPassword;
      EditText editTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextPassword == null) {
        break missingId;
      }

      id = R.id.editTextTextEmailAddress2;
      EditText editTextTextEmailAddress2 = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextEmailAddress2 == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.signUpButton;
      MaterialButton signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      return new ActivityLessorsignupBinding((RelativeLayout) rootView, alreadyHaveAccount,
          editTextName, editTextPassword, editTextTextEmailAddress2, imageView, main, signUpButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
