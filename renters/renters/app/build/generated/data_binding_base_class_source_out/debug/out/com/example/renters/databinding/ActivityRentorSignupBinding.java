// Generated by view binder compiler. Do not edit!
package com.example.renters.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.renters.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRentorSignupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonSignUp;

  @NonNull
  public final EditText editTextEmail;

  @NonNull
  public final EditText editTextFullName;

  @NonNull
  public final EditText editTextPassword;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView subtitle;

  @NonNull
  public final TextView titleScreen;

  private ActivityRentorSignupBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonSignUp, @NonNull EditText editTextEmail,
      @NonNull EditText editTextFullName, @NonNull EditText editTextPassword,
      @NonNull ConstraintLayout main, @NonNull TextView subtitle, @NonNull TextView titleScreen) {
    this.rootView = rootView;
    this.buttonSignUp = buttonSignUp;
    this.editTextEmail = editTextEmail;
    this.editTextFullName = editTextFullName;
    this.editTextPassword = editTextPassword;
    this.main = main;
    this.subtitle = subtitle;
    this.titleScreen = titleScreen;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRentorSignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRentorSignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_rentor_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRentorSignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSignUp;
      Button buttonSignUp = ViewBindings.findChildViewById(rootView, id);
      if (buttonSignUp == null) {
        break missingId;
      }

      id = R.id.editTextEmail;
      EditText editTextEmail = ViewBindings.findChildViewById(rootView, id);
      if (editTextEmail == null) {
        break missingId;
      }

      id = R.id.editTextFullName;
      EditText editTextFullName = ViewBindings.findChildViewById(rootView, id);
      if (editTextFullName == null) {
        break missingId;
      }

      id = R.id.editTextPassword;
      EditText editTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextPassword == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.subtitle;
      TextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.titleScreen;
      TextView titleScreen = ViewBindings.findChildViewById(rootView, id);
      if (titleScreen == null) {
        break missingId;
      }

      return new ActivityRentorSignupBinding((ConstraintLayout) rootView, buttonSignUp,
          editTextEmail, editTextFullName, editTextPassword, main, subtitle, titleScreen);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
