// Generated by view binder compiler. Do not edit!
package com.example.renters.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.renters.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonLogout;

  @NonNull
  public final Button buttonManageCategories;

  @NonNull
  public final Button buttonManageUsers;

  @NonNull
  public final TextView textViewGreeting;

  private ActivityAdminDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonLogout, @NonNull Button buttonManageCategories,
      @NonNull Button buttonManageUsers, @NonNull TextView textViewGreeting) {
    this.rootView = rootView;
    this.buttonLogout = buttonLogout;
    this.buttonManageCategories = buttonManageCategories;
    this.buttonManageUsers = buttonManageUsers;
    this.textViewGreeting = textViewGreeting;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLogout;
      Button buttonLogout = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogout == null) {
        break missingId;
      }

      id = R.id.buttonManageCategories;
      Button buttonManageCategories = ViewBindings.findChildViewById(rootView, id);
      if (buttonManageCategories == null) {
        break missingId;
      }

      id = R.id.buttonManageUsers;
      Button buttonManageUsers = ViewBindings.findChildViewById(rootView, id);
      if (buttonManageUsers == null) {
        break missingId;
      }

      id = R.id.textViewGreeting;
      TextView textViewGreeting = ViewBindings.findChildViewById(rootView, id);
      if (textViewGreeting == null) {
        break missingId;
      }

      return new ActivityAdminDashboardBinding((ConstraintLayout) rootView, buttonLogout,
          buttonManageCategories, buttonManageUsers, textViewGreeting);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
